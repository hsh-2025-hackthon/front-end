openapi: 3.0.3
info:
  title: Collaborative Travel Planner API
  description: |-
    This is the API for the Collaborative Travel Planner application. It allows users to create, manage, and share travel itineraries. The API supports real-time collaboration features through WebSockets.
    Authentication is handled via JWT Bearer tokens obtained from Azure AD B2C.
  version: 1.0.0
servers:
  - url: /api/v1
paths:
  /trips:
    get:
      summary: Get all trips for the user
      description: Retrieves a list of all trips associated with the authenticated user.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of trips.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trip'
    post:
      summary: Create a new trip
      description: Creates a new trip with the provided details.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTrip'
      responses:
        '201':
          description: Trip created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
  /trips/{tripId}:
    get:
      summary: Get a specific trip
      description: Retrieves the details of a single trip by its ID.
      security:
        - bearerAuth: []
      parameters:
        - name: tripId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The requested trip.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
    put:
      summary: Update a trip
      description: Updates the details of an existing trip.
      security:
        - bearerAuth: []
      parameters:
        - name: tripId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTrip'
      responses:
        '200':
          description: The updated trip.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
    delete:
      summary: Delete a trip
      description: Deletes a trip by its ID.
      security:
        - bearerAuth: []
      parameters:
        - name: tripId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Trip deleted successfully.
  /trips/{tripId}/destinations:
    post:
      summary: Add a destination to a trip
      security:
        - bearerAuth: []
      parameters:
        - name: tripId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewDestination'
      responses:
        '201':
          description: Destination added.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
  /trips/{tripId}/destinations/{destinationId}:
    put:
      summary: Update a destination
      security:
        - bearerAuth: []
      parameters:
        - name: tripId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: destinationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Destination updated.
    delete:
      summary: Remove a destination
      security:
        - bearerAuth: []
      parameters:
        - name: tripId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: destinationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Destination removed.
  /trips/{tripId}/collaborators:
    post:
      summary: Add a collaborator to a trip
      security:
        - bearerAuth: []
      parameters:
        - name: tripId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collaborator'
      responses:
        '200':
          description: Collaborator added.
  /trips/{tripId}/collaborators/{userId}:
    delete:
      summary: Remove a collaborator from a trip
      security:
        - bearerAuth: []
      parameters:
        - name: tripId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Collaborator removed.
  /ai/generate-itinerary:
    post:
      summary: Generate an itinerary with AI
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIGenerateItineraryRequest'
      responses:
        '200':
          description: AI-generated itinerary.
          content:
            application/json:
              schema:
                type: object # Define a proper schema for the response
components:
  schemas:
    Trip:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        destinations:
          type: array
          items:
            $ref: '#/components/schemas/Destination'
        collaborators:
          type: array
          items:
            $ref: '#/components/schemas/Collaborator'
    NewTrip:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
    Destination:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        location:
          type: object
    NewDestination:
      type: object
      properties:
        name:
          type: string
        location:
          type: object
    Collaborator:
      type: object
      properties:
        email:
          type: string
          format: email
        role:
          type: string
          enum: [editor, viewer]
    AIGenerateItineraryRequest:
      type: object
      properties:
        destination:
          type: string
        duration:
          type: integer
        budget:
          type: number
        interests:
          type: array
          items:
            type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
